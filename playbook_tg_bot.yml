- name: PostgreSQL
  hosts: databases
  become: yes
  tasks:
    - name: Install PostgreSQL
      apt:
        name:
          - postgresql
          - postgresql-contrib
        state: present

    - name: Upload .pgpass
      become: yes
      copy:
        src: .pgpass
        dest: /var/lib/postgresql/.pgpass
        mode: '0600'

- name: Setting up Master Server
  hosts: db
  vars_files:
    - vars.yml
  become: yes
  tasks:
    - name: Start PostgreSQL
      service:
        name: postgresql
        state: started

    - name: Create replication user
      become_user: postgres
      shell: psql -c "CREATE USER {{ DB_REPL_USER }} WITH REPLICATION ENCRYPTED PASSWORD '{{ DB_REPL_PASSWORD }}';"

    - name: Create database 
      become_user: postgres
      shell: psql -c "CREATE DATABASE {{ DB_DATABASE }};"
    - name: Connect to created database "db"
      become_user: postgres
      shell: psql -c "\c {{ DB_DATABASE }};"
    - name: Create tables
      become_user: postgres
      shell: |
        psql -d {{ DB_DATABASE }} -c "CREATE TABLE IF NOT EXISTS emails(ID SERIAL PRIMARY KEY, email VARCHAR(255) NOT NULL);"
        psql -d {{ DB_DATABASE }} -c "CREATE TABLE IF NOT EXISTS phone_numbers(ID SERIAL PRIMARY KEY, phone_number VARCHAR(100) NOT NULL);"
        psql -d {{ DB_DATABASE }} -c "INSERT INTO emails (email) VALUES ('test1111@test.com'), ('test2222@yandex.ru');"
        psql -d {{ DB_DATABASE }} -c "INSERT INTO phone_numbers (phone_number) VALUES ('89617891122'), ('+7-921-778-32-55');"

    - name: Change postgres password
      become_user: postgres
      shell: |
        psql -d {{ DB_DATABASE }} -c "ALTER ROLE postgres PASSWORD '{{ DB_PASSWD }}';"
        
    - name: Copy postgresql.conf
      template:
        src: postgresql.conf
        dest: /etc/postgresql/14/main/postgresql.conf

    - name: Copy pg_hba.conf
      template:
        src: pg_hba.conf
        dest: /etc/postgresql/14/main/pg_hba.conf

    - name: Create archive dir
      file:
        path: /oracle/pg_data/archive/
        state: directory
        owner: "{{ DB_USER }}"
        mode: '0755'
       
    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted

- name: Setting up Slave Server
  hosts: db_repl
  become: yes
  tasks:
    - name: Stop PostgreSQL
      service:
        name: postgresql
        state: stopped
    
    - name: Add listen address
      lineinfile:
        path: /etc/postgresql/14/main/postgresql.conf
        line: "listen_addresses='*'"

    - name: Remove files
      file:
        path: /var/lib/postgresql/14/main/
        state: absent
    
    - name: Run "pg_basebackup"
      become_user: postgres
      shell: pg_basebackup -R -h 192.168.91.166 -U repluser -D /var/lib/postgresql/14/main
    
    - name: Start PostgreSQL
      service:
        name: postgresql
        state: started

- name: Loading bot
  hosts: tg_bot
  become: yes
  tasks:
    - name: Install Python, Pip, Git
      apt:
        name:
        - python3
        - git
        - python3-pip
        state: present
    - name: Clone github repo
      git:
        repo: https://github.com/greyworm11/DevOpsBot_PT_START.git
        dest: /home/kali/DevOpsBot_PT_START
        clone: yes
        update: yes

    - name: Install requirements
      pip:
        requirements: /home/kali/DevOpsBot_PT_START/bot/requirements.txt
    
    - name: Copy ".env" file
      copy:
        src: .env
        dest: /home/kali/DevOpsBot_PT_START/bot/.env

    - name: Start bot
      command: "python3 /home/kali/DevOpsBot_PT_START/bot/bot.py"
